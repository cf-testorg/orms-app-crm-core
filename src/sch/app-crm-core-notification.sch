;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Install notification entities

;; Notification Liaison Entities
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.entity.EntityInfoHome.class) (let ((b (com.redknee.framework.xhome.entity.EntityInfo.))) (setBeanProperty b "Name" "Concurrent Notification Liaison")(setBeanProperty b "ClassName" "com.redknee.app.crm.notification.liaison.ConcurrentNotificationLiaison")(setBeanProperty b "Roles" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "Prototype" (let ((b (com.redknee.app.crm.notification.liaison.ConcurrentNotificationLiaison.)))  b)) b)))
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.entity.EntityInfoHome.class) (let ((b (com.redknee.framework.xhome.entity.EntityInfo.))) (setBeanProperty b "Name" "Real-Time Notification Liaison")(setBeanProperty b "ClassName" "com.redknee.app.crm.notification.liaison.RealTimeNotificationLiaison")(setBeanProperty b "Roles" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "Prototype" (let ((b (com.redknee.app.crm.notification.liaison.RealTimeNotificationLiaison.)))  b)) b)))
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.entity.EntityInfoHome.class) (let ((b (com.redknee.framework.xhome.entity.EntityInfo.))) (setBeanProperty b "Name" "Scheduled Task Notification Liaison")(setBeanProperty b "ClassName" "com.redknee.app.crm.notification.liaison.ScheduledTaskNotificationLiaison")(setBeanProperty b "Roles" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "Prototype" (let ((b (com.redknee.app.crm.notification.liaison.ScheduledTaskNotificationLiaison.)))  b)) b)))

;; Message Generator Entities
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.entity.EntityInfoHome.class) (let ((b (com.redknee.framework.xhome.entity.EntityInfo.))) (setBeanProperty b "Name" "Simple E-Mail Generator")(setBeanProperty b "ClassName" "com.redknee.app.crm.notification.generator.SimpleEmailGenerator")(setBeanProperty b "Roles" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "Prototype" (let ((b (com.redknee.app.crm.notification.generator.SimpleEmailGenerator.))) (setBeanProperty b "DefaultContentHandler" #null) b)) b)))
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.entity.EntityInfoHome.class) (let ((b (com.redknee.framework.xhome.entity.EntityInfo.))) (setBeanProperty b "Name" "Simple SMS Generator")(setBeanProperty b "ClassName" "com.redknee.app.crm.notification.generator.SimpleSmsGenerator")(setBeanProperty b "Roles" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "Prototype" (let ((b (com.redknee.app.crm.notification.generator.SimpleSmsGenerator.)))  b)) b)))
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.entity.EntityInfoHome.class) (let ((b (com.redknee.framework.xhome.entity.EntityInfo.))) (setBeanProperty b "Name" "Simple Jasper Message Generator")(setBeanProperty b "ClassName" "com.redknee.app.crm.notification.generator.SimpleJasperMessageGenerator")(setBeanProperty b "Roles" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "Prototype" (let ((b (com.redknee.app.crm.notification.generator.SimpleJasperMessageGenerator.)))  b)) b)))
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.entity.EntityInfoHome.class) (let ((b (com.redknee.framework.xhome.entity.EntityInfo.))) (setBeanProperty b "Name" "Simple UJAC Message Generator")(setBeanProperty b "ClassName" "com.redknee.app.crm.notification.generator.SimpleUjacMessageGenerator")(setBeanProperty b "Roles" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "Prototype" (let ((b (com.redknee.app.crm.notification.generator.SimpleUjacMessageGenerator.)))  b)) b)))
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.entity.EntityInfoHome.class) (let ((b (com.redknee.framework.xhome.entity.EntityInfo.))) (setBeanProperty b "Name" "Throttled Message Generator")(setBeanProperty b "ClassName" "com.redknee.app.crm.notification.generator.ThrottledMessageGenerator")(setBeanProperty b "Roles" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "Prototype" (let ((b (com.redknee.app.crm.notification.generator.ThrottledMessageGenerator.)))  b)) b)))

;; Message Delivery Service Entities
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.entity.EntityInfoHome.class) (let ((b (com.redknee.framework.xhome.entity.EntityInfo.))) (setBeanProperty b "Name" "Concurrent Delivery Service")(setBeanProperty b "ClassName" "com.redknee.app.crm.notification.delivery.ConcurrentDeliveryService")(setBeanProperty b "Roles" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "Prototype" (let ((b (com.redknee.app.crm.notification.delivery.ConcurrentDeliveryService.)))  b)) b)))
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.entity.EntityInfoHome.class) (let ((b (com.redknee.framework.xhome.entity.EntityInfo.))) (setBeanProperty b "Name" "Throttled Delivery Service")(setBeanProperty b "ClassName" "com.redknee.app.crm.notification.delivery.ThrottledDeliveryService")(setBeanProperty b "Roles" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "Prototype" (let ((b (com.redknee.app.crm.notification.delivery.ThrottledDeliveryService.)))  b)) b)))
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.entity.EntityInfoHome.class) (let ((b (com.redknee.framework.xhome.entity.EntityInfo.))) (setBeanProperty b "Name" "Binary/Post Delivery Service")(setBeanProperty b "ClassName" "com.redknee.app.crm.notification.delivery.BinaryDeliveryService")(setBeanProperty b "Roles" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "Prototype" (let ((b (com.redknee.app.crm.notification.delivery.BinaryDeliveryService.)))  b)) b)))
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.entity.EntityInfoHome.class) (let ((b (com.redknee.framework.xhome.entity.EntityInfo.))) (setBeanProperty b "Name" "E-Mail Delivery Service")(setBeanProperty b "ClassName" "com.redknee.app.crm.notification.delivery.EmailDeliveryService")(setBeanProperty b "Roles" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "Prototype" (let ((b (com.redknee.app.crm.notification.delivery.EmailDeliveryService.))) (setBeanProperty b "SmtpConfig" (let ((b (getBeanProperty b "smtpConfig")))  b))(setBeanProperty b "DefaultContentHandler" #null)(setBeanProperty b "MsgBoxGenerator" (let ((b (com.redknee.app.crm.delivery.email.SMTPDeliveryCallbackMsgBox$Factory.)))  b)) b)) b)))
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.entity.EntityInfoHome.class) (let ((b (com.redknee.framework.xhome.entity.EntityInfo.))) (setBeanProperty b "Name" "SMS Delivery Service")(setBeanProperty b "ClassName" "com.redknee.app.crm.notification.delivery.SmsDeliveryService")(setBeanProperty b "Roles" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "Prototype" (let ((b (com.redknee.app.crm.notification.delivery.SmsDeliveryService.))) (setBeanProperty b "SmppConfig" (let ((b (getBeanProperty b "smppConfig")))  b)) b)) b)))

;; Notification Template Entities
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.entity.EntityInfoHome.class) (let ((b (com.redknee.framework.xhome.entity.EntityInfo.))) (setBeanProperty b "Name" "Static Jasper Notification Template")(setBeanProperty b "ClassName" "com.redknee.app.crm.notification.template.StaticJasperNotificationTemplate")(setBeanProperty b "Roles" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "Prototype" (let ((b (com.redknee.app.crm.notification.template.StaticJasperNotificationTemplate.)))  b)) b)))
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.entity.EntityInfoHome.class) (let ((b (com.redknee.framework.xhome.entity.EntityInfo.))) (setBeanProperty b "Name" "Static UJAC Notification Template")(setBeanProperty b "ClassName" "com.redknee.app.crm.notification.template.StaticUjacNotificationTemplate")(setBeanProperty b "Roles" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "Prototype" (let ((b (com.redknee.app.crm.notification.template.StaticUjacNotificationTemplate.)))  b)) b)))
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.entity.EntityInfoHome.class) (let ((b (com.redknee.framework.xhome.entity.EntityInfo.))) (setBeanProperty b "Name" "Jasper Notification Template")(setBeanProperty b "ClassName" "com.redknee.app.crm.notification.template.JasperNotificationTemplate")(setBeanProperty b "Roles" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "Prototype" (let ((b (com.redknee.app.crm.notification.template.JasperNotificationTemplate.))) (setBeanProperty b "TemplateFilenames" (let ((c (java.util.ArrayList.)))  c)) b)) b)))
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.entity.EntityInfoHome.class) (let ((b (com.redknee.framework.xhome.entity.EntityInfo.))) (setBeanProperty b "Name" "UJAC Notification Template")(setBeanProperty b "ClassName" "com.redknee.app.crm.notification.template.UjacNotificationTemplate")(setBeanProperty b "Roles" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "Prototype" (let ((b (com.redknee.app.crm.notification.template.UjacNotificationTemplate.))) (setBeanProperty b "TemplateFilenames" (let ((c (java.util.ArrayList.)))  c)) b)) b)))
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.entity.EntityInfoHome.class) (let ((b (com.redknee.framework.xhome.entity.EntityInfo.))) (setBeanProperty b "Name" "E-Mail Notification Template")(setBeanProperty b "ClassName" "com.redknee.app.crm.notification.template.EmailNotificationTemplate")(setBeanProperty b "Roles" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "Prototype" (let ((b (com.redknee.app.crm.notification.template.EmailNotificationTemplate.))) (setBeanProperty b "ContentHandler" #null) b)) b)))
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.entity.EntityInfoHome.class) (let ((b (com.redknee.framework.xhome.entity.EntityInfo.))) (setBeanProperty b "Name" "SMS Notification Template")(setBeanProperty b "ClassName" "com.redknee.app.crm.notification.template.SmsNotificationTemplate")(setBeanProperty b "Roles" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "Prototype" (let ((b (com.redknee.app.crm.notification.template.SmsNotificationTemplate.)))  b)) b)))

;; MsgBox Factories
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.entity.EntityInfoHome.class) (let ((b (com.redknee.framework.xhome.entity.EntityInfo.))) (setBeanProperty b "Name" "SMTP Callback Message Box Factory")(setBeanProperty b "ClassName" "com.redknee.app.crm.delivery.email.SMTPDeliveryCallbackMsgBox$Factory")(setBeanProperty b "Roles" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "Prototype" (let ((b (com.redknee.app.crm.delivery.email.SMTPDeliveryCallbackMsgBox$Factory.)))  b)) b)))
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.entity.EntityInfoHome.class) (let ((b (com.redknee.framework.xhome.entity.EntityInfo.))) (setBeanProperty b "Name" "Script-Based Message Box Factory")(setBeanProperty b "ClassName" "com.redknee.app.crm.delivery.email.ScriptMsgBoxFactory")(setBeanProperty b "Roles" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "Prototype" (let ((b (com.redknee.app.crm.delivery.email.ScriptMsgBoxFactory.)))  b)) b)))

;; Input/Output Stream Factories
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.entity.EntityInfoHome.class) (let ((b (com.redknee.framework.xhome.entity.EntityInfo.))) (setBeanProperty b "Name" "Script-Based InputStream Factory")(setBeanProperty b "ClassName" "com.redknee.app.crm.io.ScriptInputStreamFactory")(setBeanProperty b "Roles" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "Prototype" (let ((b (com.redknee.app.crm.io.ScriptInputStreamFactory.)))  b)) b)))
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.entity.EntityInfoHome.class) (let ((b (com.redknee.framework.xhome.entity.EntityInfo.))) (setBeanProperty b "Name" "Script-Based OutputStream Factory")(setBeanProperty b "ClassName" "com.redknee.app.crm.io.ScriptOutputStreamFactory")(setBeanProperty b "Roles" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "Prototype" (let ((b (com.redknee.app.crm.io.ScriptOutputStreamFactory.)))  b)) b)))
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.entity.EntityInfoHome.class) (let ((b (com.redknee.framework.xhome.entity.EntityInfo.))) (setBeanProperty b "Name" "Context Lookup InputStream Factory")(setBeanProperty b "ClassName" "com.redknee.app.crm.io.ContextInputStreamFactory")(setBeanProperty b "Roles" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "Prototype" (let ((b (com.redknee.app.crm.io.ContextInputStreamFactory.)))  b)) b)))
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.entity.EntityInfoHome.class) (let ((b (com.redknee.framework.xhome.entity.EntityInfo.))) (setBeanProperty b "Name" "Context Lookup OutputStream Factory")(setBeanProperty b "ClassName" "com.redknee.app.crm.io.ContextOutputStreamFactory")(setBeanProperty b "Roles" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "Prototype" (let ((b (com.redknee.app.crm.io.ContextOutputStreamFactory.)))  b)) b)))
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.entity.EntityInfoHome.class) (let ((b (com.redknee.framework.xhome.entity.EntityInfo.))) (setBeanProperty b "Name" "File InputStream Factory")(setBeanProperty b "ClassName" "com.redknee.app.crm.io.FileInputStreamFactory")(setBeanProperty b "Roles" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "Prototype" (let ((b (com.redknee.app.crm.io.FileInputStreamFactory.)))  b)) b)))
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.entity.EntityInfoHome.class) (let ((b (com.redknee.framework.xhome.entity.EntityInfo.))) (setBeanProperty b "Name" "File OutputStream Factory")(setBeanProperty b "ClassName" "com.redknee.app.crm.io.FileOutputStreamFactory")(setBeanProperty b "Roles" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "Prototype" (let ((b (com.redknee.app.crm.io.FileOutputStreamFactory.)))  b)) b)))
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.entity.EntityInfoHome.class) (let ((b (com.redknee.framework.xhome.entity.EntityInfo.))) (setBeanProperty b "Name" "Non-closing OutputStream Factory")(setBeanProperty b "ClassName" "com.redknee.app.crm.io.ExplicitCloseOutputStreamFactory")(setBeanProperty b "Roles" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "Prototype" (let ((b (com.redknee.app.crm.io.ExplicitCloseOutputStreamFactory.)))  b)) b)))

;; Notification Result Callbacks
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.entity.EntityInfoHome.class) (let ((b (com.redknee.framework.xhome.entity.EntityInfo.))) (setBeanProperty b "Name" "Logging Notification Result Callback")(setBeanProperty b "ClassName" "com.redknee.app.crm.notification.LoggingNotificationResultCallback")(setBeanProperty b "Roles" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "Prototype" (let ((b (com.redknee.app.crm.notification.LoggingNotificationResultCallback.)))  b)) b)))
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.entity.EntityInfoHome.class) (let ((b (com.redknee.framework.xhome.entity.EntityInfo.))) (setBeanProperty b "Name" "PM Notification Result Callback")(setBeanProperty b "ClassName" "com.redknee.app.crm.notification.PMNotificationResultCallback")(setBeanProperty b "Roles" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "Prototype" (let ((b (com.redknee.app.crm.notification.PMNotificationResultCallback.)))  b)) b)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Install default configuration beans

;; Install Configuration Homes
(let ((ctx (getContext ctx "core"))) (let ((ctx (getContext ctx "AppCrmCore"))) (bindHome ctx com.redknee.app.crm.notification.LiaisonScheduleHome.class com.redknee.app.crm.notification.LiaisonSchedule.class)))
(let ((ctx (getContext ctx "core"))) (let ((ctx (getContext ctx "Application"))) (homeCreateOrStore (.get ctx com.redknee.app.crm.notification.LiaisonScheduleHome.class) (let ((b (com.redknee.app.crm.notification.LiaisonSchedule.))) (setBeanProperty b "ScheduleName" "Daytime Hours")(setBeanProperty b "Schedule" "CRM_Daytime_Hours") b))))
(let ((ctx (getContext ctx "core"))) (let ((ctx (getContext ctx "Application"))) (homeCreateOrStore (.get ctx com.redknee.app.crm.notification.LiaisonScheduleHome.class) (let ((b (com.redknee.app.crm.notification.LiaisonSchedule.))) (setBeanProperty b "ScheduleName" "Manually Triggered")(setBeanProperty b "Schedule" "never") b))))

(let ((ctx (getContext ctx "core"))) (let ((ctx (getContext ctx "AppCrmCore"))) (bindHome ctx com.redknee.app.crm.notification.NotificationThreadPoolHome.class com.redknee.app.crm.notification.NotificationThreadPool.class)))
(let ((ctx (getContext ctx "core"))) (let ((ctx (getContext ctx "Application"))) (homeCreateOrStore (.get ctx com.redknee.app.crm.notification.NotificationThreadPoolHome.class) (let ((b (com.redknee.app.crm.bean.core.NotificationThreadPool.))) (setBeanProperty b "PoolName" "Default Notification Pool")(setBeanProperty b "NumThreads" 10)(setBeanProperty b "MaxQueueSize" 1000) b))))

;; Install default liaison configuration
;; Default Real-Time Liaison 
(let ((ctx (getContext ctx "core"))) (let ((ctx (getContext ctx "AppCrmCore"))) (bindBean ctx com.redknee.app.crm.notification.liaison.RealTimeNotificationLiaison.class com.redknee.app.crm.notification.liaison.NotificationLiaisonProxy.class)))
(let ((ctx (getContext ctx "core"))) (let ((ctx (getContext ctx "Application"))) (let ((b (.get ctx com.redknee.app.crm.notification.liaison.RealTimeNotificationLiaison.class))) (setBeanProperty b "delegate" (let ((b (com.redknee.app.crm.notification.liaison.RealTimeNotificationLiaison.)))  b)) b)))

;; Default Scheduled Task Liaison
(let ((ctx (getContext ctx "core"))) (let ((ctx (getContext ctx "AppCrmCore"))) (bindBean ctx com.redknee.app.crm.notification.liaison.ScheduledTaskNotificationLiaison.class com.redknee.app.crm.notification.liaison.NotificationLiaisonProxy.class)))
(let ((ctx (getContext ctx "core"))) (let ((ctx (getContext ctx "Application"))) (let ((b (.get ctx com.redknee.app.crm.notification.liaison.ScheduledTaskNotificationLiaison.class))) (setBeanProperty b "delegate" (let ((b (com.redknee.app.crm.notification.liaison.ScheduledTaskNotificationLiaison.))) (setBeanProperty b "LiaisonSchedule" "Daytime Hours") b)) b)))

;; Install default message generator configuration
(let ((ctx (getContext ctx "core"))) (let ((ctx (getContext ctx "AppCrmCore"))) (bindBean ctx com.redknee.app.crm.notification.generator.SimpleSmsGenerator.class com.redknee.app.crm.notification.generator.MessageGeneratorProxy.class)))
(let ((ctx (getContext ctx "core"))) (let ((ctx (getContext ctx "Application"))) (let ((b (.get ctx com.redknee.app.crm.notification.generator.SimpleSmsGenerator.class))) (setBeanProperty b "delegate" (let ((b (com.redknee.app.crm.notification.generator.SimpleSmsGenerator.)))  b)) b)))

(let ((ctx (getContext ctx "core"))) (let ((ctx (getContext ctx "AppCrmCore"))) (bindBean ctx com.redknee.app.crm.notification.generator.SimpleEmailGenerator.class com.redknee.app.crm.notification.generator.MessageGeneratorProxy.class)))
(let ((ctx (getContext ctx "core"))) (let ((ctx (getContext ctx "Application"))) (let ((b (.get ctx com.redknee.app.crm.notification.generator.SimpleEmailGenerator.class))) (setBeanProperty b "delegate" (let ((b (com.redknee.app.crm.notification.generator.SimpleEmailGenerator.))) (setBeanProperty b "DefaultContentHandler" #null) b)) b)))

(let ((ctx (getContext ctx "core"))) (let ((ctx (getContext ctx "AppCrmCore"))) (bindBean ctx com.redknee.app.crm.notification.generator.SimpleJasperMessageGenerator.class com.redknee.app.crm.notification.generator.MessageGeneratorProxy.class)))
(let ((ctx (getContext ctx "core"))) (let ((ctx (getContext ctx "Application"))) (let ((b (.get ctx com.redknee.app.crm.notification.generator.SimpleJasperMessageGenerator.class))) (setBeanProperty b "delegate" (let ((b (com.redknee.app.crm.notification.generator.SimpleJasperMessageGenerator.)))  b)) b)))

(let ((ctx (getContext ctx "core"))) (let ((ctx (getContext ctx "AppCrmCore"))) (bindBean ctx com.redknee.app.crm.notification.generator.SimpleUjacMessageGenerator.class com.redknee.app.crm.notification.generator.MessageGeneratorProxy.class)))
(let ((ctx (getContext ctx "core"))) (let ((ctx (getContext ctx "Application"))) (let ((b (.get ctx com.redknee.app.crm.notification.generator.SimpleUjacMessageGenerator.class))) (setBeanProperty b "delegate" (let ((b (com.redknee.app.crm.notification.generator.SimpleUjacMessageGenerator.)))  b)) b)))

;; Install default delivery service configurations
(let ((ctx (getContext ctx "core"))) (let ((ctx (getContext ctx "AppCrmCore"))) (bindBean ctx com.redknee.app.crm.notification.delivery.SmsDeliveryService.class com.redknee.app.crm.notification.delivery.MessageDeliveryServiceProxy.class)))
(let ((ctx (getContext ctx "core"))) (let ((ctx (getContext ctx "app"))) (let ((b (.get ctx com.redknee.app.crm.notification.delivery.SmsDeliveryService.class))) (setBeanProperty b "delegate" (let ((b (com.redknee.app.crm.notification.delivery.ThrottledDeliveryService.))) (setBeanProperty b "Delegate" (let ((b (com.redknee.app.crm.notification.delivery.ConcurrentDeliveryService.))) (setBeanProperty b "Delegate" (let ((b (com.redknee.app.crm.notification.delivery.SmsDeliveryService.))) (setBeanProperty b "SmppConfig" (let ((b (getBeanProperty b "smppConfig"))) (setBeanProperty b "ServiceType" "")(setBeanProperty b "ValidityPeriod" "")(setBeanProperty b "MSISDNPrefix" "") b)) b))(setBeanProperty b "Pool" "Default Notification Pool") b))(setBeanProperty b "Throttle" (let ((b (getBeanProperty b "throttle"))) (setBeanProperty b "Enabled" #f)(setBeanProperty b "Transactions" 100L) b)) b)) b)))

(let ((ctx (getContext ctx "core"))) (let ((ctx (getContext ctx "AppCrmCore"))) (bindBean ctx com.redknee.app.crm.notification.delivery.EmailDeliveryService.class com.redknee.app.crm.notification.delivery.MessageDeliveryServiceProxy.class)))
(let ((ctx (getContext ctx "core"))) (let ((ctx (getContext ctx "app"))) (let ((b (.get ctx com.redknee.app.crm.notification.delivery.EmailDeliveryService.class))) (setBeanProperty b "delegate" (let ((b (com.redknee.app.crm.notification.delivery.ThrottledDeliveryService.))) (setBeanProperty b "Delegate" (let ((b (com.redknee.app.crm.notification.delivery.ConcurrentDeliveryService.))) (setBeanProperty b "Delegate" (let ((b (com.redknee.app.crm.notification.delivery.EmailDeliveryService.))) (setBeanProperty b "SmtpConfig" (let ((b (getBeanProperty b "smtpConfig")))  b))(setBeanProperty b "DefaultContentHandler" (let ((b (com.redknee.framework.msg.TextMailContentHandler.)))  b))(setBeanProperty b "MsgBoxGenerator" (let ((b (com.redknee.app.crm.delivery.email.SMTPDeliveryCallbackMsgBox$Factory.)))  b)) b))(setBeanProperty b "Pool" "Default Notification Pool") b))(setBeanProperty b "Throttle" (let ((b (getBeanProperty b "throttle"))) (setBeanProperty b "Enabled" #f)(setBeanProperty b "Transactions" 100L) b)) b)) b)))

(let ((ctx (getContext ctx "core"))) (let ((ctx (getContext ctx "AppCrmCore"))) (bindBean ctx com.redknee.app.crm.notification.delivery.BinaryDeliveryService.class com.redknee.app.crm.notification.delivery.MessageDeliveryServiceProxy.class)))
(let ((ctx (getContext ctx "core"))) (let ((ctx (getContext ctx "app"))) (let ((b (.get ctx com.redknee.app.crm.notification.delivery.BinaryDeliveryService.class))) (setBeanProperty b "delegate" (let ((b (com.redknee.app.crm.notification.delivery.ThrottledDeliveryService.))) (setBeanProperty b "Delegate" (let ((b (com.redknee.app.crm.notification.delivery.ConcurrentDeliveryService.))) (setBeanProperty b "Delegate" (let ((b (com.redknee.app.crm.notification.delivery.BinaryDeliveryService.)))  b))(setBeanProperty b "Pool" "Default Notification Pool") b))(setBeanProperty b "Throttle" (let ((b (getBeanProperty b "throttle"))) (setBeanProperty b "Enabled" #f)(setBeanProperty b "Transactions" 100L) b)) b)) b)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Install notification feature menus

;; Notification Main Menu
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.menu.XMenuHome.class) (let ((b (com.redknee.framework.xhome.menu.XMenu.))) (setBeanProperty b "Key" "appCrmCoreNotification")(setBeanProperty b "Label" "Notification")(setBeanProperty b "ParentKey" "carrier")(setBeanProperty b "Type" "XMenu")(setBeanProperty b "DisplayOrder" 99)(setBeanProperty b "Borders" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "CustomizationScript" "")(setBeanProperty b "Config" (let ((b (com.redknee.framework.xhome.menu.XMenuXMenuConfig.)))  b)) b)))

;; Liaison Menus (Note: appCrmCoreNotificationLiaison menu is transient and installed by TransientXMenuInstall class)
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.menu.XMenuHome.class) (let ((b (com.redknee.framework.xhome.menu.XMenu.))) (setBeanProperty b "Key" "appCrmCoreNotificationRealTimeLiaison")(setBeanProperty b "ParentKey" "appCrmCoreNotificationLiaison")(setBeanProperty b "Label" "Real-Time")(setBeanProperty b "Type" "Bean")(setBeanProperty b "DisplayOrder" 1)(setBeanProperty b "Borders" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "CustomizationScript" "")(setBeanProperty b "Config" (let ((b (com.redknee.framework.xhome.menu.XMenuBeanConfig.))) (setBeanProperty b "BeanClass" "com.redknee.app.crm.notification.liaison.RealTimeNotificationLiaison")(setBeanProperty b "UpdatePredicate" (let ((b (com.redknee.framework.xhome.elang.False.instance)))  b))(setBeanProperty b "BeanWebControl" "") b)) b)))
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.menu.XMenuHome.class) (let ((b (com.redknee.framework.xhome.menu.XMenu.))) (setBeanProperty b "Key" "appCrmCoreNotificationScheduledLiaison")(setBeanProperty b "ParentKey" "appCrmCoreNotificationLiaison")(setBeanProperty b "Label" "Scheduled")(setBeanProperty b "Type" "Bean")(setBeanProperty b "DisplayOrder" 2)(setBeanProperty b "Borders" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "CustomizationScript" "")(setBeanProperty b "Config" (let ((b (com.redknee.framework.xhome.menu.XMenuBeanConfig.))) (setBeanProperty b "BeanClass" "com.redknee.app.crm.notification.liaison.ScheduledTaskNotificationLiaison")(setBeanProperty b "UpdatePredicate" (let ((b (com.redknee.framework.xhome.elang.False.instance)))  b))(setBeanProperty b "BeanWebControl" "") b)) b)))

;; Message Generator Menus (Note: appCrmCoreNotificationGenerator menu is transient and installed by TransientXMenuInstall class)
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.menu.XMenuHome.class) (let ((b (com.redknee.framework.xhome.menu.XMenu.))) (setBeanProperty b "Key" "appCrmCoreNotificationEmailGenerator")(setBeanProperty b "ParentKey" "appCrmCoreNotificationGenerator")(setBeanProperty b "Label" "E-Mail")(setBeanProperty b "Type" "Bean")(setBeanProperty b "DisplayOrder" 1)(setBeanProperty b "Borders" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "CustomizationScript" "")(setBeanProperty b "Config" (let ((b (com.redknee.framework.xhome.menu.XMenuBeanConfig.))) (setBeanProperty b "BeanClass" "com.redknee.app.crm.notification.generator.SimpleEmailGenerator")(setBeanProperty b "UpdatePredicate" (let ((b (com.redknee.framework.xhome.elang.False.instance)))  b))(setBeanProperty b "BeanWebControl" "") b)) b)))
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.menu.XMenuHome.class) (let ((b (com.redknee.framework.xhome.menu.XMenu.))) (setBeanProperty b "Key" "appCrmCoreNotificationSmsGenerator")(setBeanProperty b "ParentKey" "appCrmCoreNotificationGenerator")(setBeanProperty b "Label" "SMS")(setBeanProperty b "Type" "Bean")(setBeanProperty b "DisplayOrder" 2)(setBeanProperty b "Borders" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "CustomizationScript" "")(setBeanProperty b "Config" (let ((b (com.redknee.framework.xhome.menu.XMenuBeanConfig.))) (setBeanProperty b "BeanClass" "com.redknee.app.crm.notification.generator.SimpleSmsGenerator")(setBeanProperty b "UpdatePredicate" (let ((b (com.redknee.framework.xhome.elang.False.instance)))  b))(setBeanProperty b "BeanWebControl" "") b)) b)))
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.menu.XMenuHome.class) (let ((b (com.redknee.framework.xhome.menu.XMenu.))) (setBeanProperty b "Key" "appCrmCoreNotificationJasperGenerator")(setBeanProperty b "ParentKey" "appCrmCoreNotificationGenerator")(setBeanProperty b "Label" "Jasper")(setBeanProperty b "Type" "Bean")(setBeanProperty b "DisplayOrder" 3)(setBeanProperty b "Borders" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "CustomizationScript" "")(setBeanProperty b "Config" (let ((b (com.redknee.framework.xhome.menu.XMenuBeanConfig.))) (setBeanProperty b "BeanClass" "com.redknee.app.crm.notification.generator.SimpleJasperMessageGenerator")(setBeanProperty b "UpdatePredicate" (let ((b (com.redknee.framework.xhome.elang.False.instance)))  b))(setBeanProperty b "BeanWebControl" "") b)) b)))
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.menu.XMenuHome.class) (let ((b (com.redknee.framework.xhome.menu.XMenu.))) (setBeanProperty b "Key" "appCrmCoreNotificationUjacGenerator")(setBeanProperty b "ParentKey" "appCrmCoreNotificationGenerator")(setBeanProperty b "Label" "UJAC")(setBeanProperty b "Type" "Bean")(setBeanProperty b "DisplayOrder" 4)(setBeanProperty b "Borders" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "CustomizationScript" "")(setBeanProperty b "Config" (let ((b (com.redknee.framework.xhome.menu.XMenuBeanConfig.))) (setBeanProperty b "BeanClass" "com.redknee.app.crm.notification.generator.SimpleUjacMessageGenerator")(setBeanProperty b "UpdatePredicate" (let ((b (com.redknee.framework.xhome.elang.False.instance)))  b))(setBeanProperty b "BeanWebControl" "") b)) b)))

;; Delivery Service Menus
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.menu.XMenuHome.class) (let ((b (com.redknee.framework.xhome.menu.XMenu.))) (setBeanProperty b "Key" "appCrmCoreNotificationDelivery")(setBeanProperty b "ParentKey" "appCrmCoreNotification")(setBeanProperty b "Label" "Delivery Services")(setBeanProperty b "Type" "XMenu")(setBeanProperty b "DisplayOrder" 3)(setBeanProperty b "Borders" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "CustomizationScript" "")(setBeanProperty b "Config" (let ((b (com.redknee.framework.xhome.menu.XMenuXMenuConfig.)))  b)) b)))
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.menu.XMenuHome.class) (let ((b (com.redknee.framework.xhome.menu.XMenu.))) (setBeanProperty b "Key" "appCrmCoreNotificationEmailDeliveryBasic")(setBeanProperty b "ParentKey" "appCrmCoreNotificationDelivery")(setBeanProperty b "Label" "E-Mail")(setBeanProperty b "Type" "Bean")(setBeanProperty b "DisplayOrder" 1)(setBeanProperty b "Borders" (let ((c (java.util.ArrayList.))) (.add c (let ((b (com.redknee.framework.xhome.menu.MenuBorder.)))(setBeanProperty b "Script" "com.redknee.app.crm.delivery.notification.EmailDeliveryServicePermissionBorder.instance();") b)) c))(setBeanProperty b "CustomizationScript" "")(setBeanProperty b "Config" (let ((b (com.redknee.framework.xhome.menu.XMenuBeanConfig.))) (setBeanProperty b "BeanClass" "com.redknee.app.crm.notification.delivery.EmailDeliveryService")(setBeanProperty b "UpdatePredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "SpecialBeanName" "Email Delivery Service Config")(setBeanProperty b "BeanWebControl" "") b)) b)))
;; Note: appCrmCoreNotificationEmailDelivery menu is transient and installed by TransientXMenuInstall class
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.menu.XMenuHome.class) (let ((b (com.redknee.framework.xhome.menu.XMenu.))) (setBeanProperty b "Key" "appCrmCoreNotificationSmsDeliveryBasic")(setBeanProperty b "ParentKey" "appCrmCoreNotificationDelivery")(setBeanProperty b "Label" "SMS")(setBeanProperty b "Type" "Bean")(setBeanProperty b "DisplayOrder" 3)(setBeanProperty b "Borders" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "CustomizationScript" "")(setBeanProperty b "Config" (let ((b (com.redknee.framework.xhome.menu.XMenuBeanConfig.))) (setBeanProperty b "BeanClass" "com.redknee.app.crm.notification.delivery.SmsDeliveryService")(setBeanProperty b "SpecialBeanName" "SMS Delivery Service Config")(setBeanProperty b "UpdatePredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "BeanWebControl" "") b)) b)))
;; Note: appCrmCoreNotificationSmsDelivery menu is transient and installed by TransientXMenuInstall class
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.menu.XMenuHome.class) (let ((b (com.redknee.framework.xhome.menu.XMenu.))) (setBeanProperty b "Key" "appCrmCoreNotificationBinaryDeliveryBasic")(setBeanProperty b "ParentKey" "appCrmCoreNotificationDelivery")(setBeanProperty b "Label" "Binary Data")(setBeanProperty b "Visible" #f)(setBeanProperty b "Type" "Bean")(setBeanProperty b "DisplayOrder" 5)(setBeanProperty b "Borders" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "CustomizationScript" "")(setBeanProperty b "Config" (let ((b (com.redknee.framework.xhome.menu.XMenuBeanConfig.))) (setBeanProperty b "BeanClass" "com.redknee.app.crm.notification.delivery.BinaryDeliveryService")(setBeanProperty b "SpecialBeanName" "Binary Delivery Service Config")(setBeanProperty b "UpdatePredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "BeanWebControl" "") b)) b)))
;; Note: appCrmCoreNotificationBinaryDelivery menu is transient and installed by TransientXMenuInstall class

;; Notification Template Groups
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.menu.XMenuHome.class) (let ((b (com.redknee.framework.xhome.menu.XMenu.))) (setBeanProperty b "Key" "appCrmCoreNotificationTemplateGroups")(setBeanProperty b "ParentKey" "appCrmCoreNotification")(setBeanProperty b "Label" "Template Groups")(setBeanProperty b "Type" "WebController")(setBeanProperty b "DisplayOrder" 4)(setBeanProperty b "MenuPredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "Borders" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "CustomizationScript" "")(setBeanProperty b "Config" (let ((b (com.redknee.framework.xhome.menu.XMenuWebControllerConfig.))) (setBeanProperty b "TableWebControl" (let ((b (com.redknee.framework.core.scripting.BeanShellExecutor.))) (setBeanProperty b "Script" "") b))(setBeanProperty b "WebControl" "")(setBeanProperty b "RequiredClass" "com.redknee.app.crm.notification.template.NotificationTemplateGroup")(setBeanProperty b "BackPredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "DeletePredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "HelpPredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "NewPredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "SavePredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "PreviewPredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "CopyPredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "UpdatePredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "Actions" (let ((c (java.util.ArrayList.))) (.add c (let ((b (com.redknee.framework.xhome.menu.Action.)))(setBeanProperty b "WebAction" (let ((b (com.redknee.framework.xhome.web.action.DeleteAction.))) (setBeanProperty b "Key" "delete")(setBeanProperty b "Label" "Delete")(setBeanProperty b "Predicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "DetailView" #t)(setBeanProperty b "Help" "Delete the current bean.") b)) b))(.add c (let ((b (com.redknee.framework.xhome.menu.Action.)))(setBeanProperty b "WebAction" (let ((b (com.redknee.framework.xhome.web.action.EditAction.))) (setBeanProperty b "Key" "edit")(setBeanProperty b "Label" "Edit")(setBeanProperty b "Predicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "Help" "Edit the bean in edit mode.") b)) b))(.add c (let ((b (com.redknee.framework.xhome.menu.Action.)))(setBeanProperty b "WebAction" (let ((b (com.redknee.framework.xhome.web.action.ViewAction.))) (setBeanProperty b "Key" "view")(setBeanProperty b "Label" "View")(setBeanProperty b "Predicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "Help" "View the bean in read-only mode.") b)) b)) c))(setBeanProperty b "FieldModes" (MapSupport.fromList (let ((c (java.util.ArrayList.)))  c))) b)) b)))

;; Template Variables Configuration
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.menu.XMenuHome.class) (let ((b (com.redknee.framework.xhome.menu.XMenu.))) (setBeanProperty b "Key" "appCRMCoreNotificationVariables")(setBeanProperty b "ParentKey" "appCrmCoreNotification")(setBeanProperty b "Label" "Template Variables")(setBeanProperty b "Type" "WebController")(setBeanProperty b "DisplayOrder" 5)(setBeanProperty b "MenuPredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "Borders" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "CustomizationScript" "")(setBeanProperty b "Config" (let ((b (com.redknee.framework.xhome.menu.XMenuWebControllerConfig.))) (setBeanProperty b "TableWebControl" (let ((b (com.redknee.framework.core.scripting.BeanShellExecutor.))) (setBeanProperty b "Script" "") b))(setBeanProperty b "WebControl" "")(setBeanProperty b "RequiredClass" "com.redknee.app.crm.bean.KeyConfiguration")(setBeanProperty b "SummaryBorder" "new com.redknee.app.crm.web.border.KeyConfigurationSearchBorder(ctx)")(setBeanProperty b "BackPredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "DeletePredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "HelpPredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "NewPredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "SavePredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "PreviewPredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "CopyPredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "UpdatePredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "Actions" (let ((c (java.util.ArrayList.))) (.add c (let ((b (com.redknee.framework.xhome.menu.Action.)))(setBeanProperty b "WebAction" (let ((b (com.redknee.framework.xhome.web.action.DeleteAction.))) (setBeanProperty b "Key" "delete")(setBeanProperty b "Label" "Delete")(setBeanProperty b "Predicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "DetailView" #t)(setBeanProperty b "Help" "Delete the current bean.") b)) b))(.add c (let ((b (com.redknee.framework.xhome.menu.Action.)))(setBeanProperty b "WebAction" (let ((b (com.redknee.framework.xhome.web.action.EditAction.))) (setBeanProperty b "Key" "edit")(setBeanProperty b "Label" "Edit")(setBeanProperty b "Predicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "Help" "Edit the bean in edit mode.") b)) b))(.add c (let ((b (com.redknee.framework.xhome.menu.Action.)))(setBeanProperty b "WebAction" (let ((b (com.redknee.framework.xhome.web.action.ViewAction.))) (setBeanProperty b "Key" "view")(setBeanProperty b "Label" "View")(setBeanProperty b "Predicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "Help" "View the bean in read-only mode.") b)) b)) c))(setBeanProperty b "FieldModes" (MapSupport.fromList (let ((c (java.util.ArrayList.)))  c))) b)) b)))

;; Repeating Section Templates
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.menu.XMenuHome.class) (let ((b (com.redknee.framework.xhome.menu.XMenu.))) (setBeanProperty b "Key" "appCRMCoreNotificationRepeatVariables")(setBeanProperty b "ParentKey" "appCrmCoreNotification")(setBeanProperty b "Label" "Repeating Section Templates")(setBeanProperty b "Type" "WebController")(setBeanProperty b "DisplayOrder" 6)(setBeanProperty b "MenuPredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "Borders" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "CustomizationScript" "")(setBeanProperty b "Config" (let ((b (com.redknee.framework.xhome.menu.XMenuWebControllerConfig.))) (setBeanProperty b "TableWebControl" (let ((b (com.redknee.framework.core.scripting.BeanShellExecutor.))) (setBeanProperty b "Script" "") b))(setBeanProperty b "WebControl" "")(setBeanProperty b "RequiredClass" "com.redknee.app.crm.delivery.email.EmailRepeatingTemplate")(setBeanProperty b "BackPredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "DeletePredicate" (let ((b (com.redknee.framework.xhome.elang.False.instance)))  b))(setBeanProperty b "HelpPredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "NewPredicate" (let ((b (com.redknee.framework.xhome.elang.False.instance)))  b))(setBeanProperty b "SavePredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "PreviewPredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "CopyPredicate" (let ((b (com.redknee.framework.xhome.elang.False.instance)))  b))(setBeanProperty b "UpdatePredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "Actions" (let ((c (java.util.ArrayList.))) (.add c (let ((b (com.redknee.framework.xhome.menu.Action.)))(setBeanProperty b "WebAction" (let ((b (com.redknee.framework.xhome.web.action.EditAction.))) (setBeanProperty b "Key" "edit")(setBeanProperty b "Label" "Edit")(setBeanProperty b "Predicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "Help" "Edit the bean in edit mode.") b)) b))(.add c (let ((b (com.redknee.framework.xhome.menu.Action.)))(setBeanProperty b "WebAction" (let ((b (com.redknee.framework.xhome.web.action.ViewAction.))) (setBeanProperty b "Key" "view")(setBeanProperty b "Label" "View")(setBeanProperty b "Predicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "Help" "View the bean in read-only mode.") b)) b)) c))(setBeanProperty b "FieldModes" (MapSupport.fromList (let ((c (java.util.ArrayList.)))  c))) b)) b)))

;; Schedules
(let ((ctx (getContext ctx "core"))) (homeCreateOrStore (.get ctx com.redknee.framework.xhome.menu.XMenuHome.class) (let ((b (com.redknee.framework.xhome.menu.XMenu.))) (setBeanProperty b "Key" "appCrmCoreNotificationSchedules")(setBeanProperty b "ParentKey" "appCrmCoreNotification")(setBeanProperty b "Label" "Schedules")(setBeanProperty b "Type" "WebController")(setBeanProperty b "DisplayOrder" 7)(setBeanProperty b "MenuPredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "Borders" (let ((c (java.util.ArrayList.)))  c))(setBeanProperty b "CustomizationScript" "")(setBeanProperty b "Config" (let ((b (com.redknee.framework.xhome.menu.XMenuWebControllerConfig.))) (setBeanProperty b "TableWebControl" (let ((b (com.redknee.framework.core.scripting.BeanShellExecutor.))) (setBeanProperty b "Script" "") b))(setBeanProperty b "WebControl" "")(setBeanProperty b "RequiredClass" "com.redknee.app.crm.notification.LiaisonSchedule")(setBeanProperty b "BackPredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "DeletePredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "HelpPredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "NewPredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "SavePredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "PreviewPredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "CopyPredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "UpdatePredicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "Actions" (let ((c (java.util.ArrayList.))) (.add c (let ((b (com.redknee.framework.xhome.menu.Action.)))(setBeanProperty b "WebAction" (let ((b (com.redknee.framework.xhome.web.action.DeleteAction.))) (setBeanProperty b "Key" "delete")(setBeanProperty b "Label" "Delete")(setBeanProperty b "Predicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "DetailView" #t)(setBeanProperty b "Help" "Delete the current bean.") b)) b))(.add c (let ((b (com.redknee.framework.xhome.menu.Action.)))(setBeanProperty b "WebAction" (let ((b (com.redknee.framework.xhome.web.action.EditAction.))) (setBeanProperty b "Key" "edit")(setBeanProperty b "Label" "Edit")(setBeanProperty b "Predicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "Help" "Edit the bean in edit mode.") b)) b))(.add c (let ((b (com.redknee.framework.xhome.menu.Action.)))(setBeanProperty b "WebAction" (let ((b (com.redknee.framework.xhome.web.action.ViewAction.))) (setBeanProperty b "Key" "view")(setBeanProperty b "Label" "View")(setBeanProperty b "Predicate" (let ((b (com.redknee.framework.xhome.elang.True.instance)))  b))(setBeanProperty b "Help" "View the bean in read-only mode.") b)) b)) c))(setBeanProperty b "FieldModes" (MapSupport.fromList (let ((c (java.util.ArrayList.)))  c))) b)) b)))

;; Notification Thread Pools (Note: appCrmCoreNotificationThreadPools menu is transient and installed by TransientXMenuInstall class)